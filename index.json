[{"authors":["Derek DeSantis"],"categories":null,"content":"","date":1538370000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538370000,"objectID":"52f35c029c84d6273eda148ad8344508","permalink":"https://derekdesantis.github.io/publication/oa-gen-left-inf/","publishdate":"2018-10-01T00:00:00-05:00","relpermalink":"/publication/oa-gen-left-inf/","section":"publication","summary":"","tags":["Operator Algebras","Operator Theory"],"title":"Operator Algebras Generated by Left Invertibles","type":"publication"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;\n","date":1536469200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536469200,"objectID":"6a451186c775f5f0adb3a0416d0cb711","permalink":"https://derekdesantis.github.io/tutorial/example/","publishdate":"2018-09-09T00:00:00-05:00","relpermalink":"/tutorial/example/","section":"tutorial","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;","tags":null,"title":"Example Page","type":"docs"},{"authors":["Derek DeSantis"],"categories":null,"content":"","date":1533877200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1533877200,"objectID":"49b6ec339c243fa93b159fe5fdafff0a","permalink":"https://derekdesantis.github.io/talk/climate-cluster/","publishdate":"2018-08-10T00:00:00-05:00","relpermalink":"/talk/climate-cluster/","section":"talk","summary":" The Köppen-Geiger climate classification system is a heuristically driven biome classifier. It uses various bounds on precipitation and temperature land data over different time scales to demarcate biomes. In this talk, we discuss a method for determining biomes directly from data.  By construction, this a large unsupervised learning problem. These are inherently difficult to manage and interpret. Our method employs the discrete wavelet transform to reduce the dimensionality of our data in order to perform clustering.  The algorithm  provides flexibility to choose which variables to cluster over – allowing one to not only resolve biomes at finer, more realistic detail, but also opens the possibility to classify the ocean.","tags":["Climate Clustering"],"title":"A wavelet based approach to climate biome clustering","type":"talk"},{"authors":["Derek DeSantis"],"categories":null,"content":"Operator algebras generated by partial isometries and their adjoints form the basis for some of the most well studied classes of C*-algebras. The Toeplitz algebra is a classic example. The generator $M_z$ on the Hardy space $H^2(\\mathbb{T})$ is isometric, and hence, left invertible. Motivated by questions from linear equations in Hilbert spaces (frame theory), we wish to understand particular types of operator algebras generated by left invertible operators.\nIn this talk, we investigate the norm closed operator algebra generated by a single left invertible operator $T$ in $\\mathscr{B}(\\mathscr{H})$ with a canonical left inverse (the Moore-Penrose inverse). This algebra, has rich operator algebraic structure that mimics the Toeplitz algebra. We are particularly interested in a class of left invertible operators we call \\textit{analytic}. The adjoints of analytic left invertible operators are Cowen-Dogulas, an important class of operators that serve as a bridge between operator theory and complex geometry. Consequently, we can represent $T$ as $M_z$ on a reproducing kernel Hilbert space of analytic functions. Using tools of Cowen-Douglas theory, we reduce the challenge of classifying these algebras into more tractable geometric problems.\n","date":1527829200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1527829200,"objectID":"2425a6bbd017cd716fd0bfa91844b027","permalink":"https://derekdesantis.github.io/talk/oa-left-inv-talk/","publishdate":"2018-06-01T00:00:00-05:00","relpermalink":"/talk/oa-left-inv-talk/","section":"talk","summary":"Operator algebras generated by partial isometries and their adjoints form the basis for some of the most well studied classes of C*-algebras. The Toeplitz algebra is a classic example. The generator $M_z$ on the Hardy space $H^2(\\mathbb{T})$ is isometric, and hence, left invertible. Motivated by questions from linear equations in Hilbert spaces (frame theory), we wish to understand particular types of operator algebras generated by left invertible operators.\nIn this talk, we investigate the norm closed operator algebra generated by a single left invertible operator $T$ in $\\mathscr{B}(\\mathscr{H})$ with a canonical left inverse (the Moore-Penrose inverse).","tags":["Operator Algebras","Operator Theory"],"title":"Operator Algebras Generated by Left Invertibles","type":"talk"},{"authors":null,"categories":null,"content":"The climate of the planet varies depending on location. Regions with similar climatology are refereed to as climate biomes. There are many factors that determine how we perceive the climate. For example, precipitation, temperature, flora and fauna are key ingredients in our delineation of biomes. Therefore classifying biomes is akin to understanding the homogeneity of climate and resources on a local scale. Therefore, it is not only important that we can classify climate biomes, but also their evolution with the changing climate. For emphasis, it is not possible to perform any meaningful environmental preservation without predetermined knowledge of what the environment is. Moreover, it is important to uncover regions with higher risks of biome change.\nHistorically, the standard used to classify climate biomes has been the Köppen-Gieger model. It is based off a decision tree, which uses various information about temperature, precipitation, in addition to a threshold to measure dryness is used in the arid climates.\nThe Köppen-Giegger model has two key benefits. First, it is relatively easy to implement. The Köppen-Giegger model can resolve the climate after a few simple comparisons. Indeed, one has to make at most four checks before the climate biome is resolved. Furthermore, the result is interpretable. Since the classes are created by explicit parameters, one can provide coarse descriptors to the climate classes. However, the model does have its downsides.\nFirst and foremost, the Köppen-Giegger model only uses precipitation and temperature data. How we perceive the climate depends on much more than these variables (e.g. wind, flora, and fauna). The descriptors in the model are therefore too coarse to resolve everything of interest. Furthermore, these variables limit the scope of biomes to considering land data only. Resolving biomes of the ocean is an important problem to understand the effects of climate change on the ocean. Classification could be used to identify distinct water masses, their mixing, the carbon and heat fluxes between the ocean and atmosphere. Biomes could also be used to identify biogeochemical conditions favorable for ocean life. For example, ocean variables like heat and nutrients can contribute to increasingly favorable growing climates for phytoplankton and macroalgae.\nAnother important issue is that, as the climate changes, so must the biomes. However, the model is not built to change with the climate, or detect when changes happen. This is due in large part to the fact that the parameters of the model are a heuristic, and non-modular. This is, in and of itself, another problem. How sure are we that the Polar Climate applies for $T_{max} \u0026lt; 10$ degrees C? Perhaps the correct bound is $9.921$ degrees C. The problem is we simply do not know. Compounding this problem are the subclasses in the model. There does not seem to be universal agreement on how to further break up the classes beyond (A)-(E).\nThis leads us naturally to problem, and the purpose of this work. Our goal is to design a model that is flexible enough to classify on any variables of interest (including ocean data). We desire an algorithm that is capable of detecting the changes in climate. We are interested in determining where biomes might be shifting over time. And perhaps most importantly, we seek a model that is data driven, as apposed to the current heuristic based standard. Our methodology is to use machine learning to classify climate biomes. This is a large scale, high dimensional, unsupervised learning problem. Consequently, a central problem is to reduce the size of the data in a way that is coherent with the large scale climate behavior. Our approach leverages the discrete wavelet transform to ``shrink\u0026rdquo; the data, while extracting the overall climate trend.\n","date":1461733200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461733200,"objectID":"942f2286af74f4e53deb4becb372e185","permalink":"https://derekdesantis.github.io/project/climate-clustering/","publishdate":"2016-04-27T00:00:00-05:00","relpermalink":"/project/climate-clustering/","section":"project","summary":"This work aimes to determine climate biomes directely from data, and determine where they are changing.","tags":["Climate Clustering","Machine Learning"],"title":"Climate Biome Clustering","type":"project"},{"authors":null,"categories":null,"content":"For a Hilbert space $\\mathscr{H}$, $y \\in \\mathscr{H}$ and $T \\in \\mathscr{B}(\\mathscr{H})$, the equation \\begin{equation} T x = y \\end{equation} has a solution whenever $T$ is left invertible. For any left inverse $L$ of $T$, $x = L y$ is a solution. More generally, if $T$ has closed range, $T$ has a pseudo left inverse. Concretely, if $T \\in \\mathscr{B}(\\mathscr{H})$ has closed range, restricting to $\\ker(T)^\\perp$ we obtain a new operator that is left invertible. Picking a left inverse $L$ for $T\\mid_{\\ker(T)^\\perp}$, we find that $x = L y$ is a solution.\nIn most applications, there is a canonical choice for the left inverse $L$. Generally, this is the Moore-Penrose inverse, denoted $T^\\dagger$. It is the unique left inverse such that $\\ker(T^\\dagger) = \\mbox{ran}(T)^\\perp$. To construct $T^\\dagger$, one considers $T$ mapping $\\ker(T)^\\perp$ to $\\mbox{ran}(T)$. From this perspective, $T$ is bijective, and thus boundedly invertible by the open mapping theorem. The unique inverse, once extended by zero, is $T^\\dagger$. For instance, if $T$ is an isometry then $T^\\dagger = T^*$, the adjoint of $T$.\nOne subject where closed range operators are frequently used is frame theory. A sequence {$f_n$} in a Hilbert space $\\mathscr{H}$ is said to be a frame if there exists constants $0\u0026lt; A \\leq B$ such that \\begin{equation} A ||x||^2 \\leq \\sum_n | \\langle x, f_n \\rangle |^2 \\leq B ||x||^2 \\end{equation} for all $x \\in \\mathscr{H}$.\nAssociated to each Hilbert space frame {$f_n$} is a (canonical) dual frame {$g_n$}. Using this dual frame, one can reconstruct elements $f$ of the Hilbert space $\\mathscr{H}$ in an analogous way to orthonormal basis:\n\\begin{equation} f = \\sum_{n \\geq 1} \\langle f, g_n \\rangle f_n \\end{equation}\nIt is easy to see that orthonormal bases are frames, but not all frames need be orthogonal, norm one, or even contain a unique set of elements. A frame does not enforce the rigidity of inner products that an orthonormal basis does - allowing for variation between individual frame elements (rather than just 0 or 1). The flexibility of the definition has engendered applications across signal processing and harmonic analysis. For instance, frames may be constructed for particular features of a problem that are precluded from orthogonal bases due to their requirement for linear independence. Further, this extra redundancy helps to protect signals from degradation, ensuring that the effects of erasures are minimized. The looseness of the structure allows one to construct the analog of frames for structures that don\u0026rsquo;t necessarily come equipped with suitable generalization of an orthonormal basis. Indeed, certain classes of Hilbert C*-Modules and Banach spaces posses frames.\nMany questions concerning Hilbert space frames are inexorably tied to questions of closed ranged and left invertible operators. All frames for closed subspaces of a Hilbert $\\mathscr{H}$ spaces arise as the application of a closed range operator $T$ on a frame for $\\mathscr{H}$. Properties of frames, such as rigidity and perturbation results also depend on the analysis of closed range operators. With this groundwork of closed ranged operators and frame theory laid, we now describe our interest in generating concrete operator algebras.\nA well-studied class of operator algebras are C-algebras generated by partial isometries. For example graph algebras, C-algebras generated partial isometries subject to constraints of a directed graph, reside here.\nRepresentations of graph C*-algebras arising from a directed graph may be described as follows. Given a directed graph, choose a Hilbert space for each vertex of the graph (with suitable dimension depending on loops of the graph). After direct summing each of these spaces together, we obtain a Hilbert space $\\mathscr{H}$ where each vertex corresponds to an orthogonal summand of $\\mathscr{H}$. By choosing orthonormal sequences for each of these closed, orthogonal subspaces of $\\mathscr{H}$, we then pick partial isometries that map one summand to another, subject to the Cuntz-Krieger relations.\nThe partial isometric generators of concrete graph algebras preserve orthonormal basis (that is, up to the kernels of the partial isometries). The representation of the graph C-algebra can be viewed as encoding the dynamics of walks on the graph. A natural extension of these concrete graph C-algebras is one that encodes the dynamics of a frame.\nOne arrives at a such an extension by replacing partial isometries and their adjoints with closed ranged operators and their Moore-Penrose inverses. As discussed above, the closed range operators preserve frame theoretic quantities. In the isometric case, the Moore-Penrose inverse is the adjoint. Hence, such operator algebras reduce to the C-algebraic case when the generators are isometric. Therefore, this class of operator algebras is the natural generalization of concrete graph C-algebras that integrates frame theory. This leads us to the following general program:\nGiven a set of operators with closed range and their Moore-Penrose inverses construct the norm-closed algebra subject to the constraints of a directed graph. What is the structure of these algebras?\n","date":1461733200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461733200,"objectID":"8a8a620cd4cb65de3f32cf3120fae60c","permalink":"https://derekdesantis.github.io/project/oa-from-frame/","publishdate":"2016-04-27T00:00:00-05:00","relpermalink":"/project/oa-from-frame/","section":"project","summary":"This work focuses on operator algebras that arise from directed graphs and frame theory.","tags":["Operator Algebras","Operator Theory","Frame Theory"],"title":"Operator Algebras Modeling Dynamics of Frames","type":"project"},{"authors":[],"categories":null,"content":" Academic is a framework to help you create a beautiful website quickly. Perfect for personal sites, blogs, or business/project sites. Check out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes. Then head on over to the Quick Start guide or take a look at the Release Notes.\n\nKey features:\n Easily manage various content including homepage, blog posts, publications, talks, and projects Extensible via color themes and widgets/plugins Write in Markdown for easy formatting and code highlighting, with LaTeX for mathematical expressions Social/academic network linking, Google Analytics, and Disqus comments Responsive and mobile friendly Simple and refreshing one page design Multilingual and easy to customize  Color Themes Academic is available in different color themes and font themes.\n       Install You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Quick install using your web browser  Install Academic with Netlify  Netlify will provide you with a customizable URL to access your new site  On GitHub, go to your newly created academic-kickstart repository and edit config.toml to personalize your site. Shortly after saving the file, your site will automatically update Read the Quick Start Guide to learn how to add Markdown content. For inspiration, refer to the Markdown content which powers the Demo  Install with Git Prerequisites:\n Download and install Git Download and install Hugo   Fork the Academic Kickstart repository and clone your fork with Git:\ngit clone https://github.com/sourcethemes/academic-kickstart.git My_Website  Note that if you forked Academic Kickstart, the above command should be edited to clone your fork, i.e. replace sourcethemes with your GitHub username.\n Initialize the theme:\ncd My_Website git submodule update --init --recursive   Install with ZIP  Download and extract Academic Kickstart Download and extract the Academic theme to the themes/academic/ folder from the above step  Install with RStudio View the guide to installing Academic with RStudio\nQuick start  If you installed on your computer, view your new website by running the following command:\nhugo server  Now visit localhost:1313 and your new Academic powered website will appear. Otherwise, if using Netlify, they will provide you with your URL.\n Read the Quick Start Guide to learn how to add Markdown content, customize your site, and deploy it. For inspiration, refer to the Markdown content which powers the Demo\n Build your site by running the hugo command. Then host it for free using Github Pages or Netlify (refer to the first installation method). Alternatively, copy the generated public/ directory (by FTP, Rsync, etc.) to your production web server (such as a university\u0026rsquo;s hosting service).\n  Updating Feel free to star the project on Github to help keep track of updates and check out the release notes prior to updating your site.\nBefore updating the framework, it is recommended to make a backup of your entire website directory (or at least your themes/academic directory) and record your current version number.\nBy default, Academic is installed as a Git submodule which can be updated by running the following command:\ngit submodule update --remote --merge  Check out the update guide for full instructions and alternative methods.\nFeedback \u0026amp; Contributing Please use the issue tracker to let me know about any bugs or feature requests, or alternatively make a pull request.\nFor support, head over to the Hugo discussion forum.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461128400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1515823200,"objectID":"ba6423d815d4f5949b7a69912feb741d","permalink":"https://derekdesantis.github.io/post/getting-started/","publishdate":"2016-04-20T00:00:00-05:00","relpermalink":"/post/getting-started/","section":"post","summary":"Create a beautifully simple website or blog in under 10 minutes.","tags":[],"title":"Academic: the website designer for Hugo","type":"post"},{"authors":null,"categories":null,"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c2915ec5da95791851caafdcba9664af","permalink":"https://derekdesantis.github.io/slides/example-slides/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/slides/example-slides/","section":"slides","summary":"Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$","tags":null,"title":"Slides","type":"slides"}]